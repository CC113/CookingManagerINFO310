/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.RecipeDataInterface;
import dao.PlaylistDataInterface;
import domain.Profile;
import domain.Recipe;
import gui.helpers.SimpleListModel;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JOptionPane;

/**
 *
 * @author Hyunsun
 */
public class SearchRecipe extends javax.swing.JDialog {

	public RecipeDataInterface dao;
	public PlaylistDataInterface playdao;
	private SimpleListModel myModel = new SimpleListModel();
	private Collection<Recipe> recipesByTags = new ArrayList<Recipe>();
	private Collection<Recipe> recipesTemp = new ArrayList<Recipe>();
	private Profile signedInProfile;
	private MainMenu mm;

	/**
	 * Creates new form SearchRecipe
	 */
	public SearchRecipe(java.awt.Frame parent, boolean modal, RecipeDataInterface dao, Profile signedInProfile, PlaylistDataInterface playdao, MainMenu mm) {
		super(parent, modal);
		this.dao = dao;
		this.playdao = playdao;
		this.signedInProfile = signedInProfile;
		initComponents();
		myModel = new SimpleListModel();
		myModel.updateItems(dao.getRecipes());
		recipeList.setModel(myModel);
		this.setResizable(false);
		Color backgroundColor = new Color(229, 214, 201);
		this.getContentPane().setBackground(backgroundColor);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel1 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      txtRecipeSearch = new javax.swing.JTextField();
      searchButton = new javax.swing.JButton();
      filterButton = new javax.swing.JButton();
      viewButton = new javax.swing.JButton();
      deleteButton = new javax.swing.JButton();
      jCheckBoxVegetarian = new javax.swing.JCheckBox();
      jCheckBoxVegan = new javax.swing.JCheckBox();
      jCheckBoxGF = new javax.swing.JCheckBox();
      jCheckBoxDF = new javax.swing.JCheckBox();
      jCheckBoxPaleo = new javax.swing.JCheckBox();
      jScrollPane1 = new javax.swing.JScrollPane();
      recipeList = new javax.swing.JList<>();
      closeButton1 = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setBackground(new java.awt.Color(239, 240, 234));

      jLabel1.setBackground(new java.awt.Color(239, 240, 234));
      jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
      jLabel1.setForeground(new java.awt.Color(75, 68, 41));
      jLabel1.setText("S E A R C H  R E C I P E S");

      jLabel3.setBackground(new java.awt.Color(239, 240, 234));
      jLabel3.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
      jLabel3.setForeground(new java.awt.Color(139, 191, 166));
      jLabel3.setText("Bone");

      jLabel4.setBackground(new java.awt.Color(239, 240, 234));
      jLabel4.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
      jLabel4.setForeground(new java.awt.Color(255, 167, 167));
      jLabel4.setText("Apple");

      jLabel5.setBackground(new java.awt.Color(239, 240, 234));
      jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
      jLabel5.setForeground(new java.awt.Color(139, 191, 166));
      jLabel5.setText("Tea");

      txtRecipeSearch.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
      txtRecipeSearch.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtRecipeSearchActionPerformed(evt);
         }
      });

      searchButton.setBackground(new java.awt.Color(94, 162, 129));
      searchButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
      searchButton.setForeground(new java.awt.Color(255, 255, 255));
      searchButton.setText("SEARCH");
      searchButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchButtonActionPerformed(evt);
         }
      });

      filterButton.setBackground(new java.awt.Color(94, 162, 129));
      filterButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
      filterButton.setForeground(new java.awt.Color(255, 255, 255));
      filterButton.setText("FILTER");
      filterButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            filterButtonActionPerformed(evt);
         }
      });

      viewButton.setBackground(new java.awt.Color(75, 68, 41));
      viewButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
      viewButton.setForeground(new java.awt.Color(255, 255, 255));
      viewButton.setText("VIEW");
      viewButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            viewButtonActionPerformed(evt);
         }
      });

      deleteButton.setBackground(new java.awt.Color(75, 68, 41));
      deleteButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
      deleteButton.setForeground(new java.awt.Color(255, 255, 255));
      deleteButton.setText("DELETE");
      deleteButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteButtonActionPerformed(evt);
         }
      });

      jCheckBoxVegetarian.setBackground(new java.awt.Color(229, 214, 201));
      jCheckBoxVegetarian.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      jCheckBoxVegetarian.setForeground(new java.awt.Color(53, 133, 96));
      jCheckBoxVegetarian.setText("Vegetarian");

      jCheckBoxVegan.setBackground(new java.awt.Color(229, 214, 201));
      jCheckBoxVegan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      jCheckBoxVegan.setForeground(new java.awt.Color(53, 133, 96));
      jCheckBoxVegan.setText("Vegan");
      jCheckBoxVegan.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBoxVeganActionPerformed(evt);
         }
      });

      jCheckBoxGF.setBackground(new java.awt.Color(229, 214, 201));
      jCheckBoxGF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      jCheckBoxGF.setForeground(new java.awt.Color(53, 133, 96));
      jCheckBoxGF.setText("Gluten Free");

      jCheckBoxDF.setBackground(new java.awt.Color(229, 214, 201));
      jCheckBoxDF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      jCheckBoxDF.setForeground(new java.awt.Color(53, 133, 96));
      jCheckBoxDF.setText("Dairy Free");

      jCheckBoxPaleo.setBackground(new java.awt.Color(229, 214, 201));
      jCheckBoxPaleo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      jCheckBoxPaleo.setForeground(new java.awt.Color(53, 133, 96));
      jCheckBoxPaleo.setText("Paleo");

      recipeList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 162, 129)));
      recipeList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
      jScrollPane1.setViewportView(recipeList);

      closeButton1.setBackground(new java.awt.Color(75, 68, 41));
      closeButton1.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
      closeButton1.setForeground(new java.awt.Color(255, 255, 255));
      closeButton1.setText("CLOSE");
      closeButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            closeButton1ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jCheckBoxVegetarian)
                  .addGap(27, 27, 27)
                  .addComponent(jCheckBoxVegan)
                  .addGap(28, 28, 28)
                  .addComponent(jCheckBoxGF)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                  .addComponent(jCheckBoxDF)
                  .addGap(28, 28, 28)
                  .addComponent(jCheckBoxPaleo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jScrollPane1)
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                  .addComponent(txtRecipeSearch)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                  .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addGap(18, 18, 18)
                  .addComponent(closeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(11, 11, 11)))
            .addContainerGap())
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jLabel1)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel3)
                  .addGap(9, 9, 9)
                  .addComponent(jLabel4)))
            .addGap(6, 6, 6)
            .addComponent(jLabel5)
            .addGap(57, 57, 57))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel3)
               .addComponent(jLabel4)
               .addComponent(jLabel5))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(txtRecipeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(layout.createSequentialGroup()
                  .addGap(16, 16, 16)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxVegetarian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxVegan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxGF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                     .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxPaleo)
                        .addComponent(jCheckBoxDF)))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(22, 22, 22)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(viewButton, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
               .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
               .addComponent(closeButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
		 String txtRecipeSearchString = txtRecipeSearch.getText();
		 if (!(txtRecipeSearchString.equals(""))) {
			 System.out.println("Before");
			 myModel.updateItems(dao.searchRecipes(txtRecipeSearchString));
			 System.out.println("After");
		 } else {
			 myModel.updateItems(dao.getRecipes());
		 }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
		 //clear all recipes from previous filter searches
		 recipesByTags.clear();
		 recipesTemp.clear();
		 recipesByTags.addAll(dao.getRecipes());
		 if (jCheckBoxVegetarian.isSelected()) {
			 for (Recipe recipes : recipesByTags) {
				 if (recipes.getTags().contains("Vegetarian")) {
					 recipesTemp.add(recipes);
				 }
			 }
			 recipesByTags.clear();
			 recipesByTags.addAll(recipesTemp);
			 recipesTemp.clear();
		 }
		 if (jCheckBoxVegan.isSelected()) {
			 for (Recipe recipes : recipesByTags) {
				 if (recipes.getTags().contains("Vegan")) {
					 recipesTemp.add(recipes);
				 }
			 }
			 recipesByTags.clear();
			 recipesByTags.addAll(recipesTemp);
			 recipesTemp.clear();
		 }
		 if (jCheckBoxGF.isSelected()) {
			 for (Recipe recipes : recipesByTags) {
				 if (recipes.getTags().contains("Gluten Free")) {
					 recipesTemp.add(recipes);
				 }
			 }
			 recipesByTags.clear();
			 recipesByTags.addAll(recipesTemp);
			 recipesTemp.clear();
		 }
		 if (jCheckBoxDF.isSelected()) {
			 for (Recipe recipes : recipesByTags) {
				 if (recipes.getTags().contains("Dairy Free")) {
					 recipesTemp.add(recipes);
				 }
			 }
			 recipesByTags.clear();
			 recipesByTags.addAll(recipesTemp);
			 recipesTemp.clear();
		 }
		 if (jCheckBoxPaleo.isSelected()) {
			 for (Recipe recipes : recipesByTags) {
				 if (recipes.getTags().contains("Paleo")) {
					 recipesTemp.add(recipes);
				 }
			 }
			 recipesByTags.clear();
			 recipesByTags.addAll(recipesTemp);
			 recipesTemp.clear();
		 }

		 myModel.updateItems(recipesByTags);
    }//GEN-LAST:event_filterButtonActionPerformed

    private void txtRecipeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecipeSearchActionPerformed
		 // TODO add your handling code here:
    }//GEN-LAST:event_txtRecipeSearchActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
		 // TODO add your handling code here:
		 Recipe recipeToView = recipeList.getSelectedValue();
		 if (!recipeList.isSelectionEmpty()) {
			 ViewRecipe editor = new ViewRecipe(this, true, recipeToView, dao, signedInProfile, playdao, mm);
			 editor.setLocationRelativeTo(this);
			 editor.setVisible(true);
			 myModel.updateItems(dao.getRecipes());
		 }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
		 Recipe recipeToDelete = recipeList.getSelectedValue();
		 if (!recipeList.isSelectionEmpty()) {
			 int result = JOptionPane.showConfirmDialog(this, "Are you sure you "
						+ "want to delete " + recipeToDelete.getName() + "?");
			 if (result == JOptionPane.YES_OPTION) {
				 dao.deleteRecipe(recipeToDelete.getRecipeID());
				 playdao.removeRecipeFromAllPlaylists(recipeToDelete.getRecipeID());
				 myModel.updateItems(dao.getRecipes());
			 }
		 }
    }//GEN-LAST:event_deleteButtonActionPerformed

   private void jCheckBoxVeganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVeganActionPerformed
		// TODO add your handling code here:
   }//GEN-LAST:event_jCheckBoxVeganActionPerformed

   private void closeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton1ActionPerformed
		// TODO add your handling code here:
		dispose();
   }//GEN-LAST:event_closeButton1ActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SearchRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SearchRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SearchRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SearchRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                SearchRecipe dialog = new SearchRecipe(new javax.swing.JFrame(), true, dao);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Overrides
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton closeButton1;
   private javax.swing.JButton deleteButton;
   private javax.swing.JButton filterButton;
   private javax.swing.JCheckBox jCheckBoxDF;
   private javax.swing.JCheckBox jCheckBoxGF;
   private javax.swing.JCheckBox jCheckBoxPaleo;
   private javax.swing.JCheckBox jCheckBoxVegan;
   private javax.swing.JCheckBox jCheckBoxVegetarian;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JList<Recipe> recipeList;
   private javax.swing.JButton searchButton;
   private javax.swing.JTextField txtRecipeSearch;
   private javax.swing.JButton viewButton;
   // End of variables declaration//GEN-END:variables
}
