/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.PlaylistDataInterface;
import dao.ProfileDataInterface;
import domain.Profile;
import gui.helpers.SimpleListModel;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.JOptionPane;
import password.PasswordHash;

/**
 *
 * @author Hyunsun
 */
public class CreateProfile extends javax.swing.JDialog {

	private final ProfileDataInterface dao;
	private PlaylistDataInterface playdao;
	private SimpleListModel myModel = new SimpleListModel();
	private Profile profile = new Profile();
	private final MainMenu mm;

	/**
	 * Creates new form CreateProfile
	 */
	public CreateProfile(java.awt.Frame parent, boolean modal, ProfileDataInterface dao, PlaylistDataInterface playdao, MainMenu mainMenuReference) {
		super(parent, modal);
		this.dao = dao;
		this.playdao = playdao;
		mm = mainMenuReference;
		initComponents();
		this.setResizable(false);
		Color backgroundColor = new Color(229, 214, 201);
		this.getContentPane().setBackground(backgroundColor);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        profileCloseButton = new javax.swing.JButton();
        profileCreateButton = new javax.swing.JButton();
        jCheckBoxVegetarian = new javax.swing.JCheckBox();
        jCheckBoxVegan = new javax.swing.JCheckBox();
        jCheckBoxGF = new javax.swing.JCheckBox();
        jCheckBoxDF = new javax.swing.JCheckBox();
        jCheckBoxPaleo = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(239, 240, 234));

        jLabel2.setBackground(new java.awt.Color(239, 240, 234));
        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(75, 68, 41));
        jLabel2.setText("P R O F I L E");

        jLabel6.setBackground(new java.awt.Color(239, 240, 234));
        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(139, 191, 166));
        jLabel6.setText("Bone");

        jLabel7.setBackground(new java.awt.Color(239, 240, 234));
        jLabel7.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 167, 167));
        jLabel7.setText("Apple");

        jLabel8.setBackground(new java.awt.Color(239, 240, 234));
        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(139, 191, 166));
        jLabel8.setText("Tea");

        jLabel9.setBackground(new java.awt.Color(239, 240, 234));
        jLabel9.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(56, 133, 96));
        jLabel9.setText("Name:");

        txtName.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(239, 240, 234));
        jLabel12.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(56, 133, 96));
        jLabel12.setText("Diet:");

        profileCloseButton.setBackground(new java.awt.Color(75, 68, 41));
        profileCloseButton.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        profileCloseButton.setForeground(new java.awt.Color(255, 255, 255));
        profileCloseButton.setText("CLOSE");
        profileCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileCloseButtonActionPerformed(evt);
            }
        });

        profileCreateButton.setBackground(new java.awt.Color(75, 68, 41));
        profileCreateButton.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        profileCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        profileCreateButton.setText("CREATE");
        profileCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileCreateButtonActionPerformed(evt);
            }
        });

        jCheckBoxVegetarian.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxVegetarian.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxVegetarian.setForeground(new java.awt.Color(56, 133, 96));
        jCheckBoxVegetarian.setText("Vegetarian");

        jCheckBoxVegan.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxVegan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxVegan.setForeground(new java.awt.Color(56, 133, 96));
        jCheckBoxVegan.setText("Vegan");

        jCheckBoxGF.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxGF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxGF.setForeground(new java.awt.Color(56, 133, 96));
        jCheckBoxGF.setText("Gluten Free");

        jCheckBoxDF.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxDF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDF.setForeground(new java.awt.Color(56, 133, 96));
        jCheckBoxDF.setText("Dairy Free");

        jCheckBoxPaleo.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxPaleo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxPaleo.setForeground(new java.awt.Color(56, 133, 96));
        jCheckBoxPaleo.setText("Paleo");

        jLabel10.setBackground(new java.awt.Color(239, 240, 234));
        jLabel10.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(56, 133, 96));
        jLabel10.setText("Username:");

        jLabel11.setBackground(new java.awt.Color(239, 240, 234));
        jLabel11.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(56, 133, 96));
        jLabel11.setText("Password:");

        txtPassword.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtUsername.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(profileCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(profileCloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword)
                            .addComponent(txtUsername)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxVegetarian)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxVegan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxGF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxPaleo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel2)
                        .addGap(0, 136, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(jLabel8)
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCheckBoxVegetarian)
                    .addComponent(jCheckBoxVegan)
                    .addComponent(jCheckBoxGF)
                    .addComponent(jCheckBoxDF)
                    .addComponent(jCheckBoxPaleo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profileCreateButton)
                    .addComponent(profileCloseButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
		 // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void profileCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileCloseButtonActionPerformed
		 // TODO add your handling code here:
		 dispose();
    }//GEN-LAST:event_profileCloseButtonActionPerformed

    private void profileCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileCreateButtonActionPerformed
		 String username = txtUsername.getText();
		 Profile profile1 = dao.getProfileByUsername(username);
		 if (profile1 != null) {
			 JOptionPane.showMessageDialog(this, "An account with this username already exists.", "Error",
						JOptionPane.WARNING_MESSAGE);
		 } else if (username.length() > 20) {
			 JOptionPane.showMessageDialog(this, "Please ensure username does not exceed 20 characters.", "Error",
						JOptionPane.WARNING_MESSAGE);
		 } else if ((txtName.getText()).length() > 40) {
			 JOptionPane.showMessageDialog(this, "Please ensure name does not exceed 40 characters.", "Error",
						JOptionPane.WARNING_MESSAGE);
		 } else if (txtUsername.getText().equals("") || txtPassword.getText().equals("") || txtName.getText().equals("")) {
			 JOptionPane.showMessageDialog(this, "Please enter a name, username and password.", "Error",
						JOptionPane.WARNING_MESSAGE);
		 } else {
			 {
				 String name = txtName.getText();
				 String userID = UUID.randomUUID().toString();
				 profile.setUserID(userID);
				 profile.setName(name);
				 profile.setUsername(username);
				 profile.setPassword(PasswordHash.hash(txtPassword.getText()));

				 List<String> playlists = new ArrayList<>();
				 profile.setPlaylists(playlists);

				 //setting dietary requirments
				 if (jCheckBoxVegetarian.isSelected()) {
					 profile.setVegetarian(true);
					 System.out.println("1");
				 }
				 if (jCheckBoxVegan.isSelected()) {
					 profile.setVegan(true);
					 System.out.println("1");
				 }
				 if (jCheckBoxGF.isSelected()) {
					 profile.setGlutenFree(true);
					 System.out.println("1");
				 }
				 if (jCheckBoxDF.isSelected()) {
					 profile.setDairyFree(true);
					 System.out.println("1");
				 }
				 if (jCheckBoxPaleo.isSelected()) {
					 profile.setPaleo(true);
					 System.out.println("1");
				 }

				 dao.save(profile);
				 profile.addToPlaylist(playdao.initialFavouriteSetup(userID));
				 profile.addToPlaylist(playdao.initialHistorySetup(userID));
				 dao.save(profile);
				 mm.signIn(profile);
				 dispose();
			 }
		 }
    }//GEN-LAST:event_profileCreateButtonActionPerformed

   private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
		// TODO add your handling code here:
   }//GEN-LAST:event_txtPasswordActionPerformed

   private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
		// TODO add your handling code here:
   }//GEN-LAST:event_txtUsernameActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                CreateProfile dialog = new CreateProfile(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxDF;
    private javax.swing.JCheckBox jCheckBoxGF;
    private javax.swing.JCheckBox jCheckBoxPaleo;
    private javax.swing.JCheckBox jCheckBoxVegan;
    private javax.swing.JCheckBox jCheckBoxVegetarian;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton profileCloseButton;
    private javax.swing.JButton profileCreateButton;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
