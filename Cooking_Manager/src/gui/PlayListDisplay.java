/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.PlaylistDataInterface;
import dao.RecipeDataInterface;
import domain.Profile;
import domain.Recipe;
import gui.helpers.SimpleListModel;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 *
 * @author Hyunsun
 */
public class PlayListDisplay extends javax.swing.JDialog {
	
	private final RecipeDataInterface recdao;
	private final PlaylistDataInterface playdao;
	private SimpleListModel myModel = new SimpleListModel();
	private String playlistName;
	private String userID;
	private MainMenu mm;

	/**
	 * Creates new form PlayListDisplay
	 */
	public PlayListDisplay(java.awt.Frame parent, boolean modal, RecipeDataInterface recdao, PlaylistDataInterface playdao, String playlistName, String userID, MainMenu mm) {
		super(parent, modal);
		this.recdao = recdao;
		this.playdao = playdao;
		this.playlistName = playlistName;
		this.userID = userID;
		this.mm = mm;
		  
		initComponents();
		txtPlayListName.setText(playlistName);
		  txtPlayListName.setEditable(false);
		List<String> playlistIDs = new ArrayList<>();
		List<Recipe> recipesForList = new ArrayList<>();
		
		playlistIDs.addAll(playdao.getRecipesFromPlaylist(userID, playlistName));
		
		for (int i = 0; i < playlistIDs.size(); i++) {
			recipesForList.add(recdao.getRecipeByID(playlistIDs.get(i)));
		}
		
		myModel = new SimpleListModel();
		myModel.updateItems(recipesForList);
		recipeList.setModel(myModel);
                
                this.setResizable(false);
                
                Color backgroundColor = new Color(229, 214, 201);
                this.getContentPane().setBackground(backgroundColor);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPlayListName = new javax.swing.JTextField();
        closeButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        recipeList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(239, 240, 234));

        jLabel2.setBackground(new java.awt.Color(239, 240, 234));
        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(75, 68, 41));
        jLabel2.setText("R E C I P E S");

        jLabel6.setBackground(new java.awt.Color(239, 240, 234));
        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(139, 191, 166));
        jLabel6.setText("Bone");

        jLabel7.setBackground(new java.awt.Color(239, 240, 234));
        jLabel7.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 167, 167));
        jLabel7.setText("Apple");

        jLabel8.setBackground(new java.awt.Color(239, 240, 234));
        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(139, 191, 166));
        jLabel8.setText("Tea");

        jLabel9.setBackground(new java.awt.Color(239, 240, 234));
        jLabel9.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(56, 133, 96));
        jLabel9.setText("Name:");

        txtPlayListName.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        txtPlayListName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlayListNameActionPerformed(evt);
            }
        });

        closeButton.setBackground(new java.awt.Color(75, 68, 41));
        closeButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        closeButton.setForeground(new java.awt.Color(255, 255, 255));
        closeButton.setText("CLOSE");
        closeButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        viewButton.setBackground(new java.awt.Color(75, 68, 41));
        viewButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        viewButton.setForeground(new java.awt.Color(255, 255, 255));
        viewButton.setText("VIEW");
        viewButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(239, 240, 234));
        jLabel10.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(56, 133, 96));
        jLabel10.setText("Recipes:");

        removeButton.setBackground(new java.awt.Color(75, 68, 41));
        removeButton.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("REMOVE");
        removeButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        recipeList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 162, 129)));
        recipeList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(recipeList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPlayListName)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(238, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(jLabel8)
                .addGap(234, 234, 234))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(204, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(190, 190, 190)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPlayListName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(272, 272, 272))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2)
                    .addContainerGap(482, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPlayListNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlayListNameActionPerformed
		 // TODO add your handling code here:
    }//GEN-LAST:event_txtPlayListNameActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
		 // TODO add your handling code here:
		 dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
		 Recipe recipeToView = recipeList.getSelectedValue();
		 if (!recipeList.isSelectionEmpty()) {
			 ViewRecipe editor = new ViewRecipe(this, true, recipeToView, recdao, mm.getSignedInProfile(), playdao, mm);
			 editor.setLocationRelativeTo(this);
			 editor.setVisible(true);
			 List<String> playlistIDs = new ArrayList<>();
			 List<Recipe> recipesForList = new ArrayList<>();
			 
			 playlistIDs.addAll(playdao.getRecipesFromPlaylist(userID, playlistName));
			 
			 for (int i = 0; i < playlistIDs.size(); i++) {
				 recipesForList.add(recdao.getRecipeByID(playlistIDs.get(i)));
			 }
			 myModel.updateItems(recipesForList);
		 }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
		 Recipe recipeToView = recipeList.getSelectedValue();
		 if (!recipeList.isSelectionEmpty()) {
			 Collection<String> contents = playdao.getPlaylistByName(mm.getSignedInProfile().getUserID(), playlistName);
			 List<String> listContents = new ArrayList(contents);
			 listContents.remove(recipeToView.getRecipeID());
			 playdao.addToPlaylist(userID, playlistName, listContents);
			 
			 List<String> playlistIDs = new ArrayList<>();
			 List<Recipe> recipesForList = new ArrayList<>();
			 
			 playlistIDs.addAll(playdao.getRecipesFromPlaylist(userID, playlistName));
			 
			 for (int i = 0; i < playlistIDs.size(); i++) {
				 recipesForList.add(recdao.getRecipeByID(playlistIDs.get(i)));
			 }
			 myModel.updateItems(recipesForList);
		 }
    }//GEN-LAST:event_removeButtonActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PlayListDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PlayListDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PlayListDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PlayListDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                PlayListDisplay dialog = new PlayListDisplay(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Recipe> recipeList;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField txtPlayListName;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
