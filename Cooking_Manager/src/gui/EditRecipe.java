/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.RecipeDataInterface;
import domain.Recipe;
import gui.helpers.SimpleListModel;
import gui.helpers.ValidationHelper;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Hyunsun
 */
public class EditRecipe extends javax.swing.JDialog {
	
	private final RecipeDataInterface dao;
	private SimpleListModel myModel = new SimpleListModel();
	private Recipe recipe = new Recipe();
	private ValidationHelper validHelp = new ValidationHelper();
	
    /**
     * Edits an existing recipe
     */
    public EditRecipe(java.awt.Window parent, boolean modal, RecipeDataInterface dao) {
        super(parent);
		  super.setModal(modal);
		  this.dao = dao;
        initComponents();
        this.setResizable(false);
    }
	 
	 //constructor for EDITING recipes
	 public EditRecipe(java.awt.Window parent, boolean modal, 
			  Recipe recipeToEdit, RecipeDataInterface dao) {
		this(parent, modal, dao);
		this.recipe = recipeToEdit;
		txtRecipeName.setText(recipe.getName());
		txtRecipeDescription.setText(recipe.getDescription());
		txtRecipeIngredients.setText(recipe.getIngredients());
		txtRecipeMethod.setText(recipe.getMethod());
		jComboBoxSize.setSelectedItem(recipe.getServingSize());
	        jComboBoxTime.setSelectedItem(recipe.getPrepTime());
		//grabbing the tags
		if (recipe.getTags().contains("Vegetarian")) {
			jCheckBoxVegetarian.setSelected(true);
		}
		if (recipe.getTags().contains("Vegan")) {
			jCheckBoxVegan.setSelected(true);
		}
		if (recipe.getTags().contains("Gluten Free")) {
			jCheckBoxGF.setSelected(true);
		}
		if (recipe.getTags().contains("Dairy Free")) {
			jCheckBoxDF.setSelected(true);
		}
		if (recipe.getTags().contains("Paleo")) {
			jCheckBoxPaleo.setSelected(true);
		}
                Color backgroundColor = new Color(229, 214, 201);
                this.getContentPane().setBackground(backgroundColor);
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRecipeName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        recipeSaveButton = new javax.swing.JButton();
        RecipeCancelButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCheckBoxVegetarian = new javax.swing.JCheckBox();
        jCheckBoxVegan = new javax.swing.JCheckBox();
        jCheckBoxGF = new javax.swing.JCheckBox();
        jCheckBoxDF = new javax.swing.JCheckBox();
        jCheckBoxPaleo = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRecipeIngredients = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRecipeMethod = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRecipeDescription = new javax.swing.JTextArea();
        jComboBoxSize = new javax.swing.JComboBox<>();
        jComboBoxTime = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(239, 240, 234));

        jLabel1.setBackground(new java.awt.Color(239, 240, 234));
        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 68, 41));
        jLabel1.setText("E D I T  R E C I P E");

        jLabel4.setBackground(new java.awt.Color(239, 240, 234));
        jLabel4.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 167, 167));
        jLabel4.setText("Apple");

        jLabel5.setBackground(new java.awt.Color(239, 240, 234));
        jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(139, 191, 166));
        jLabel5.setText("Tea");

        jLabel3.setBackground(new java.awt.Color(239, 240, 234));
        jLabel3.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(139, 191, 166));
        jLabel3.setText("Bone");

        txtRecipeName.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        txtRecipeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecipeNameActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(239, 240, 234));
        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(56, 133, 96));
        jLabel6.setText("Name:");

        jLabel7.setBackground(new java.awt.Color(239, 240, 234));
        jLabel7.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(56, 133, 96));
        jLabel7.setText("Ingredients:");

        jLabel8.setBackground(new java.awt.Color(239, 240, 234));
        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(56, 133, 96));
        jLabel8.setText("Description:");

        jLabel9.setBackground(new java.awt.Color(239, 240, 234));
        jLabel9.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(56, 133, 96));
        jLabel9.setText("Dietary Tags:");

        recipeSaveButton.setBackground(new java.awt.Color(75, 68, 41));
        recipeSaveButton.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        recipeSaveButton.setForeground(new java.awt.Color(255, 255, 255));
        recipeSaveButton.setText("SAVE");
        recipeSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipeSaveButtonActionPerformed(evt);
            }
        });

        RecipeCancelButton.setBackground(new java.awt.Color(75, 68, 41));
        RecipeCancelButton.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        RecipeCancelButton.setForeground(new java.awt.Color(255, 255, 255));
        RecipeCancelButton.setText("CANCEL");
        RecipeCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecipeCancelButtonActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(239, 240, 234));
        jLabel10.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(56, 133, 96));
        jLabel10.setText("Serving Size:");

        jLabel11.setBackground(new java.awt.Color(239, 240, 234));
        jLabel11.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(56, 133, 96));
        jLabel11.setText("Preparation Time:");

        jCheckBoxVegetarian.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxVegetarian.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxVegetarian.setForeground(new java.awt.Color(53, 133, 96));
        jCheckBoxVegetarian.setText("Vegetarian");

        jCheckBoxVegan.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxVegan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxVegan.setForeground(new java.awt.Color(53, 133, 96));
        jCheckBoxVegan.setText("Vegan");
        jCheckBoxVegan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxVeganActionPerformed(evt);
            }
        });

        jCheckBoxGF.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxGF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxGF.setForeground(new java.awt.Color(53, 133, 96));
        jCheckBoxGF.setText("Gluten Free");

        jCheckBoxDF.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxDF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxDF.setForeground(new java.awt.Color(53, 133, 96));
        jCheckBoxDF.setText("Dairy Free");

        jCheckBoxPaleo.setBackground(new java.awt.Color(229, 214, 201));
        jCheckBoxPaleo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxPaleo.setForeground(new java.awt.Color(53, 133, 96));
        jCheckBoxPaleo.setText("Paleo");

        jLabel12.setBackground(new java.awt.Color(239, 240, 234));
        jLabel12.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(56, 133, 96));
        jLabel12.setText("Method:");

        txtRecipeIngredients.setColumns(20);
        txtRecipeIngredients.setLineWrap(true);
        txtRecipeIngredients.setRows(5);
        txtRecipeIngredients.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtRecipeIngredients);

        txtRecipeMethod.setColumns(20);
        txtRecipeMethod.setLineWrap(true);
        txtRecipeMethod.setRows(5);
        txtRecipeMethod.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtRecipeMethod);

        txtRecipeDescription.setColumns(20);
        txtRecipeDescription.setLineWrap(true);
        txtRecipeDescription.setRows(5);
        txtRecipeDescription.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtRecipeDescription);

        jComboBoxSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        jComboBoxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSizeActionPerformed(evt);
            }
        });

        jComboBoxTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180" }));

        jLabel13.setBackground(new java.awt.Color(239, 240, 234));
        jLabel13.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(56, 133, 96));
        jLabel13.setText("(mins)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRecipeName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTime, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBoxVegetarian)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxVegan)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxGF)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxDF)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxPaleo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(87, 87, 87))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel4)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5))
                            .addComponent(jLabel1))
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(recipeSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RecipeCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRecipeName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxTime))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jComboBoxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jCheckBoxVegetarian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxVegan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxGF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxPaleo, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipeSaveButton)
                    .addComponent(RecipeCancelButton))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRecipeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecipeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecipeNameActionPerformed

    private void recipeSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipeSaveButtonActionPerformed
	    String name = txtRecipeName.getText();
		 String description = txtRecipeDescription.getText();
		 String servingSize = jComboBoxSize.getSelectedItem().toString();
		 String preparationTime = jComboBoxTime.getSelectedItem().toString();
		 String ingredients = txtRecipeIngredients.getText();
		 String method = txtRecipeMethod.getText();
		 List<String> tags = new ArrayList<String>();
		 if (jCheckBoxVegetarian.isSelected()) {
			 tags.add("Vegetarian");
		 }
		 if (jCheckBoxVegan.isSelected()) {
			 tags.add("Vegan");
		 }
		 if (jCheckBoxGF.isSelected()) {
			 tags.add("Gluten Free");
		 }
		 if (jCheckBoxDF.isSelected()) {
			 tags.add("Dairy Free");
		 }
		 if (jCheckBoxPaleo.isSelected()) {
			 tags.add("Paleo");
		 }

		 //String method = txtRecipeMethod.getText();
		 //String ingredients = txtRecipeIngredients.getText();
		 //set details into product object
		 recipe.setName(name);
		 recipe.setDescription(description);
		 recipe.setServingSize(servingSize);
		 recipe.setPrepTime(preparationTime);
		 recipe.setMethod(method);
		 recipe.setIngredients(ingredients);
		 recipe.setTags(tags);
		 
		 if (validHelp.isObjectValid(recipe)) {
			 dao.saveRecipe(recipe);
			 System.out.println(recipe);
		 }
		 dispose();
                        
    }//GEN-LAST:event_recipeSaveButtonActionPerformed

    private void RecipeCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecipeCancelButtonActionPerformed
        // TODO add your handling code here:
		  dispose();
    }//GEN-LAST:event_RecipeCancelButtonActionPerformed

    private void jCheckBoxVeganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVeganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxVeganActionPerformed

    private void jComboBoxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSizeActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//	 
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NewRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NewRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NewRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NewRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                NewRecipe dialog = new NewRecipe(new javax.swing.JFrame(), true, dao);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RecipeCancelButton;
    private javax.swing.JCheckBox jCheckBoxDF;
    private javax.swing.JCheckBox jCheckBoxGF;
    private javax.swing.JCheckBox jCheckBoxPaleo;
    private javax.swing.JCheckBox jCheckBoxVegan;
    private javax.swing.JCheckBox jCheckBoxVegetarian;
    private javax.swing.JComboBox<String> jComboBoxSize;
    private javax.swing.JComboBox<String> jComboBoxTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton recipeSaveButton;
    private javax.swing.JTextArea txtRecipeDescription;
    private javax.swing.JTextArea txtRecipeIngredients;
    private javax.swing.JTextArea txtRecipeMethod;
    private javax.swing.JTextField txtRecipeName;
    // End of variables declaration//GEN-END:variables
}
